openapi: 3.0.0
info:
  title: Customer API
  version: 1.0.0
  description: API for managing bank clients. BootCamp Microservices 49.
  contact:
    name: No0dl3 Support
    url: https://github.com/byNo0dle
servers:
  - url: http://localhost:9003/api
    description: Customer Service
paths:
  /customer:
    get:
      tags:
        - customer
      summary: Find all customers
      operationId: findAll
      responses:
        '200':
          description: List of customers retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        '400':
          description: Bad Request invalid syntax
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerError'
        '404':
          description: Not Found customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerError'
    post:
      tags:
        - customer
      summary: Add a new customer to the bank
      description: Add a new customer to the bank
      operationId: saveCustomer
      requestBody:
        description: Create a new customer in the bank
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Bad Request invalid syntax
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerError'
        '404':
          description: Not Found customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerError'
    put:
      tags:
        - customer
      summary: Update an existing customer
      description: Update an existing customer by Id
      operationId: updateCustomer
      requestBody:
        description: Update an existent customer in the bank
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Bad Request invalid syntax
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerError'
        '404':
          description: Not Found customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerError'
  /customer/{id}:
    get:
      tags:
        - customer
      summary: Find customer by ID
      description: Returns a single customer
      operationId: findById
      parameters:
        - name: id
          in: path
          description: ID of customer to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Bad Request invalid syntax
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerError'
        '404':
          description: Not Found customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerError'
    delete:
      tags:
        - customer
      summary: Deletes a customer
      description: Delete a customer
      operationId: deleteCustomer
      parameters:
        - name: id
          in: path
          description: Customer id to delete
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Bad Request invalid syntax
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerError'
        '404':
          description: Not Found customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerError'

components:
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: string
          example: 65xd2dx0x7d11d2x20827638
        firstName:
          type: string
          example: Piero Rogelio
        lastName:
          type: string
          example: Ahuanari Sangama
        documentNumber:
          type: string
          example: 78765400
        emailAddress:
          type: string
          example: pieroahuanarisangama@gmail.com
        phoneNumber:
          type: string
          example: 981675432
        homeAddress:
          type: string
          example: Av. New York 2300
        typeDocument:
          type: string
          enum:
            - DNI
            - RUC
            - PASSPORT
            - IMMIGRATIONCARD
        typeCustomer:
          type: string
          enum:
            - PERSONAL
            - BUSINESS
    CustomerError:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message